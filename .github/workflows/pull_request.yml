name: pull_request

on:
  push:
    branches:
      - '*'
      - '!master'

env:
  GRADLE_OPTS: '-Xmx1024m -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow # get all history
      - uses: actions/cache@v1
        name: gradle cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - uses: actions/cache@v1
        name: gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - run: go run tools/monorepo/monorepo.go -path=services/server -command="./gradlew -p services/server test"
      - run: go run tools/monorepo/monorepo.go -path=services/client -command="./gradlew -p services/client test"
      - run: go run tools/monorepo/monorepo.go -path=libraries/logging -command="./gradlew -p libraries/logging test"
      - run: go run tools/monorepo/monorepo.go -path=libraries/common -command="./gradlew -p libraries/common test"
      - run: go run tools/monorepo/monorepo.go -path=tools/gradle-plugins/gradle-hello-plugin -command="./gradlew -p tools/gradle-plugins/gradle-hello-plugin test"
